# -*- coding: utf-8 -*-
"""Movie_Recommendation_System.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FBcjjBMESBbRA3saWLUON6DKca95MpKp
"""

import pandas as pd
import numpy as np
import seaborn as sns

df = pd.read_csv("/content/netflix_movies_data.csv")

df.head()

df.shape

df.duplicated().sum()

df.isnull().sum()

df = df.replace(np.nan, ' ')

df.isnull().sum()

df.head()

df['tags'] = df['listed_in'] + df['description']

df.head()

new_df = df[['title', 'type','tags']]

new_df

"""## Content-Based Filtering"""

# import Tfidfvectorizer for creating vector matrix

from sklearn.feature_extraction.text import TfidfVectorizer

tfidf = TfidfVectorizer(stop_words = 'english')

tfidf_matrix = tfidf.fit_transform(new_df['tags'])

tfidf_matrix.shape

from sklearn.metrics.pairwise import linear_kernel

cos_sim = linear_kernel(tfidf_matrix, tfidf_matrix)

# construct a reverse map of indices and movies title
indices =pd.Series(new_df.index, index = new_df['title']).drop_duplicates()

indices

def get_recommendation(title, cos_sim = cos_sim):

  indx = indices[title]

  sim_scores = list(enumerate(cos_sim[indx]))

  sort_indices = sorted(sim_scores, key = lambda x: x[1], reverse = True)

  sim_scores = sort_indices[1:11]

  movie_indices = [int(i[0]) for i in sim_scores]

  return new_df.iloc[movie_indices]['title']

get_recommendation('Ganglands')

get_recommendation('Zodiac')

get_recommendation('Zombie Dumb')

